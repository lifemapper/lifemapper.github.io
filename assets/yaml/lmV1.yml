# This is the first attempt at a YAML document for the Lifemapper Web Services API
swagger: '2.0'

#TODO : Check HTTP codes

info:
  title: Lifemapper API
  description: Lifemapper Webservices API
  version: "1.0.0"
# the domain of the service
host: svc.lifemapper.org
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /services
produces:
  - application/json
  - application/xml
  - image/tiff
  - text/plain
  - image/x-aaigrid
paths:
  /sdm/experiments/{format}:
    get:
      summary: SDM Experiments
      description: |
        The SDM experiments endpoint returns sdm experiments
      parameters:
        - $ref: '#/parameters/MetaFormats'
        - $ref: '#/parameters/AfterTime'
        - $ref: '#/parameters/AlgorithmCode'
        - $ref: '#/parameters/BeforeTime'
        - $ref: '#/parameters/DisplayName'
        - $ref: '#/parameters/EPSG'
        - $ref: '#/parameters/FullObjects'
        - $ref: '#/parameters/OccurrenceSetId'
        - $ref: '#/parameters/Page'
        - $ref: '#/parameters/PerPage'
        - $ref: '#/parameters/Public'
        - $ref: '#/parameters/Status'
      tags:
        - Experiments
      responses:
        200:
          description: A list of experiments matching the specified criteria
          schema:
            $ref: '#/definitions/AtomList'
    post:
      summary: Post a new SDM experiment
      description: |
        Posting a new SDM experiment creates items in the Lifemapper system 
        and initializes them for computation
      parameters:
        - $ref: '#/parameters/MetaFormats'
      tags:
        - Experiments
      responses:
        201:
          description: A new experiment is posted
          schema:
            $ref: '#/definitions/Experiment'
  /sdm/experiments/{experimentId}/{format}:
    get:
      summary: GET an SDM experiment
      description: Get an individual SDM experiment
      parameters:
        - $ref: '#/parameters/ExperimentFormats'
        - $ref: '#/parameters/PathExperimentId'
      tags:
        - Experiments
      responses:
        200:
          description: The experiment formatted as specified
          schema:
            $ref: '#/definitions/Experiment'
    delete:
      summary: Delete an existing experiment
      description: Delete an SDM experiment that you own
      parameters:
        - $ref: '#/parameters/ExperimentFormats'
        - $ref: '#/parameters/PathExperimentId'
      tags:
        - Experiments
      responses:
        200:
          description: An okay message that the experiment was deleted
  /sdm/experiments/{experimentId}/algorithm/{format}:
    get:
      summary: Get the algorithm for an SDM experiment
      parameters:
        - $ref: '#/parameters/PathExperimentId'
        - $ref: '#/parameters/MetaFormats'
      tags:
        - Experiments
        - Algorithm
      responses:
        200:
          description: Algorithm inforation formatted as specified
          schema:
            $ref: '#/definitions/Algorithm'
  /sdm/experiments/{experimentId}/occurrences/{format}:
    get:
      summary: Get the occurrence set used to build this experiment
      parameters:
        - $ref: '#/parameters/PathExperimentId'
        - $ref: '#/parameters/OccurrenceSetFormats'
      tags:
        - Experiments
        - Occurrence Sets
      responses:
        200:
          description: The occurrence set in the specified format
  /sdm/experiments/{experimentId}/scenario/{format}:
    get:
      summary: Get the scenario used to build the model of the experiment
      parameters:
        - $ref: '#/parameters/PathExperimentId'
        - $ref: '#/parameters/ScenarioFormats'
      tags:
        - Experiments
        - Scenarios
      responses:
        200:
          description: The scenario used for the model in the specified format
          schema:
            $ref: '#/definitions/Scenario'
  /sdm/experiments/{experimentId}/projections/{format}:
    #TODO Add projection parameters and fill in
    get:
      summary: A service endpoint for the projections of this experiment
      parameters:
        - $ref: '#/parameters/PathExperimentId'
        - $ref: '#/parameters/MetaFormats'
      tags:
        - Experiments
        - Projections
      responses:
        200:
          description: A list of the projections that match the criteria
          schema:
            $ref: '#/definitions/AtomList'
  /sdm/layers/{format}:
    get:
      summary: A service endpoint for listing SDM environment layers
      parameters:
        - $ref: '#/parameters/MetaFormats'
        - $ref: '#/parameters/AfterTime'
        - $ref: '#/parameters/BeforeTime'
        - $ref: '#/parameters/EPSG'
        - $ref: '#/parameters/FullObjects'
        - $ref: '#/parameters/IsCategorical'
        - $ref: '#/parameters/Page'
        - $ref: '#/parameters/PerPage'
        - $ref: '#/parameters/Public'
        - $ref: '#/parameters/ScenarioId'
        - $ref: '#/parameters/TypeCode'
      tags:
        - Layers
      responses:
        200:
          description: A list of environmental layers that match the criteria
          schema:
            $ref: '#/definitions/AtomList'
    post:
      # TODO: make sure this definition is correct
      summary: Post a new environmental layer
      parameters:
        - $ref: '#/parameters/MetaFormats'
        - name: dataFormat
          in: query
          description: The format of the layer data.  see http://www.gdal.org/formats_list.html
          required: true
          type: string
        - name: description
          in: query
          description: A description of this layer
          required: false
          type: string
        - name: endDate
          in: query
          description: The end date for this layer
          required: false
          type: string
          format: YYYY-MM-DD
        - name: envLayerType
          in: query
          description: The type code for this layer
          required: true
          type: string
        - name: envLayerTypeId
          in: query
          description: The type code id for this layer
          required: false
          type: integer
        - name: epsgCode
          in: query
          description: The EPSG code for this layer
          required: true
          type: integer
        - name: isCategorical
          in: query
          description: An indicator if this layer is categorical or not (1=yes, 0=no)
          required: false
          type: integer
          format: int2
          minimum: 0
          maximum: 1
          enum: [0, 1]
        #TODO: How to specify multiple?
        - name: keyword
          in: query
          description: A keyword associated with this layer
          required: false
          type: string
        - name: layerUrl
          in: query
          description: A URL where the layer content can be retrieved
          required: false
          type: string
        - name: name
          in: query
          description: A name for this layer
          required: true
          type: string
        - name: resolution
          in: query
          description: The resolution of the cells in this layer
          required: true
          type: string
        - name: startDate
          in: query
          description: The start date for this layer
          required: false
          type: string
          format: YYYY-MM-DD
        - name: title
          in: query
          description: A title for this layer
          required: false
          type: string
        # TODO: Enum this
        - name: units
          in: query
          description: The cell size units for this layer (such as dd for decimal degrees)
          required: true
          type: string
        # TODO: Enum?
        - name: valUnits
          in: query
          description: The units for the values in each cell (such as degreesCelsius)
          required: false
          type: string
      tags:
        - Layers
      responses:
        201:
          description: Successful layer post
          schema:
            $ref: '#/definitions/Layer'
  /sdm/layers/{layerId}/{format}:
    get:
      summary: Get an SDM environmental layer
      parameters:
        - $ref: '#/parameters/PathLayerId'
        - $ref: '#/parameters/LayerFormats'
      tags:
        - Layers
      responses:
        200:
          description: Layer object in specified format
          schema:
            $ref: '#/definitions/Layer'
    delete:
      summary: Delete an SDM environmental layer that you own
      parameters:
        - $ref: '#/parameters/PathLayerId'
        - $ref: '#/parameters/MetaFormats'
      tags:
        - Layers
      responses:
        200:
          description: Returns an OK response that a layer is deleted
  # Count experiments
  # Count layers
  /sdm/occurrences/{format}:
    get:
      summary: Get a list of occurrence sets that match your criteria
      parameters:
        - $ref: '#/parameters/MetaFormats'
        - $ref: '#/parameters/AfterTime'
        - $ref: '#/parameters/BeforeTime'
        - $ref: '#/parameters/DisplayName'
        - $ref: '#/parameters/EPSG'
        - $ref: '#/parameters/FullObjects'
        - $ref: '#/parameters/HasProjections' #TODO
        - $ref: '#/parameters/MinimumNumberOfPoints' # TODO
        - $ref: '#/parameters/Page'
        - $ref: '#/parameters/PerPage'
        - $ref: '#/parameters/Public'
      tags:
        - Occurrence Sets
      responses:
        200:
          description: A list of occurrene sets that match your criteria
          schema:
            $ref: '#/definitions/AtomList'
    post:
      summary: Post a new occurrence set
      parameters:
        #TODO: Body
        - $ref: '#/parameters/MetaFormats'
        - name: pointsType
          in: query
          description: The type of file being uploaded
          required: true
          type: string
        - name: displayName
          in: query
          description: The display name for this occurrence set
          required: true
          type: string
          format: string
        - name: epsgCode
          in: query
          description: The EPSG code for the occurrence set
          required: true
          type: integer
        - name: name
          in: query
          description: A short name for the occurrence set
          required: false
          type: string
      tags:
        - Occurrence Sets
      responses:
        201:
          description: An occurrence set in the specified format
          schema:
            $ref: '#/definitions/OccurrenceSet'
  /sdm/occurrences/{occurrenceSetId}/{format}:
    get:
      summary: Get an occurrence set in the specified format
      parameters:
        - $ref: '#/parameters/PathOccurrenceSetId'
        - $ref: '#/parameters/OccurrenceSetFormats'
      tags:
        - Occurrence Sets
      responses:
        200:
          description: An occurrence set in the specified format
          schema:
            $ref: '#/definitions/OccurrenceSet'
    delete:
      summary: Delete an occurrence set you own
      parameters:
        - $ref: '#/parameters/PathOccurrenceSetId'
        - $ref: '#/parameters/MetaFormats'
      tags:
        - Occurrence Sets
      responses:
        200:
          description: OK message that an occurrence set was deleted
  /sdm/projections/{format}:
    get:
      summary: Get a list of projections that match your criteria
      parameters:
        - $ref: '#/parameters/MetaFormats'
        - $ref: '#/parameters/AfterTime'
        - $ref: '#/parameters/AlgorithmCode'
        - $ref: '#/parameters/BeforeTime'
        - $ref: '#/parameters/DisplayName'
        - $ref: '#/parameters/EPSG'
        - $ref: '#/parameters/ExperimentId'
        - $ref: '#/parameters/FullObjects'
        - $ref: '#/parameters/OccurrenceSetId'
        - $ref: '#/parameters/Page'
        - $ref: '#/parameters/PerPage'
        - $ref: '#/parameters/Public'
        - $ref: '#/parameters/ScenarioId'
        - $ref: '#/parameters/Status'
      tags:
        - Projections
      responses:
        200:
          description: A list of occurrence sets
          schema:
            $ref: '#/definitions/AtomList'
  /sdm/projections/{projectionId}/{format}:
    get:
      summary: Get a projection
      parameters:
        - $ref: '#/parameters/PathProjectionId'
        - $ref: '#/parameters/ProjectionFormats'
      tags:
        - Projections
      responses:
        200:
          description: Get a projection in the format you specify
          schema:
            $ref: '#/definitions/Projection'
    delete:
      summary: Delete a projection that you own
      parameters:
        - $ref: '#/parameters/PathProjectionId'
        - $ref: '#/parameters/MetaFormats'
      tags:
        - Projections
      responses:
        200:
          description: OK Message that a projection was deleted
  /sdm/scenarios/{format}:
    get:
      summary: Get a list of scenarios that match your criteria
      parameters:
        - $ref: '#/parameters/MetaFormats'
        - $ref: '#/parameters/AfterTime'
        - $ref: '#/parameters/BeforeTime'
        - $ref: '#/parameters/EPSG'
        - $ref: '#/parameters/FullObjects'
        - $ref: '#/parameters/Keyword'
        - $ref: '#/parameters/MatchingScenario'
        - $ref: '#/parameters/Page'
        - $ref: '#/parameters/PerPage'
        - $ref: '#/parameters/Public'
      tags:
        - Scenarios
      responses:
        200:
          description: A list of scenarios matching the criteria
          schema:
            $ref: '#/definitions/AtomList'
    post:
      summary: Post a new climate scenario for SDM
      parameters:
        - $ref: '#/parameters/MetaFormats'
        - name: code
          in: query
          description: A short name for this scenario
          required: true
          type: string
        - name: title
          in: query
          description: A title for this scenario
          required: false
          type: string
        - name: author
          in: query
          description: The author of this climate scenario
          required: false
          type: string
        - name: description
          in: query
          description: A description of this scenario
          required: false
          type: string
        - name: startDate
          in: query
          description: The start date of this scenario
          required: false
          type: string
          format: YYYY-MM-DD
        - name: endDate
          in: query
          description: The end date of this scenario
          required: false
          type: string
        - name: units
          in: query
          description: The cell size units for layers in this scenario
          required: true
          type: string
        - name: resolution
          in: query
          description: The resolution of the layers in this scenario
          required: false
          type: number
        - name: keyword
          #TODO Multiple
          in: query
          description: A keyword associated with this scenario
          required: false
          type: string
        - name: epsgCode
          in: query
          description: The EPSG code used by the layers in the scenario
          required: true
          type: integer
        - name: layer
          in: query
          description: The layer id of a layer to add to this scenario
          required: true
          type: integer
      tags:
        - Scenarios
      responses:
        201:
          description: The posted scenario
          schema:
            $ref: '#/definitions/Scenario'
  /sdm/scenarios/{scenarioId}/{format}:
    get:
      summary: Get a scenario
      parameters:
        - $ref: '#/parameters/PathScenarioId'
        - $ref: '#/parameters/ScenarioFormats'
      tags:
        - Scenarios
      responses:
        200:
          description: The scenario in the specified format
          schema:
            $ref: '#/definitions/Scenario'
    delete:
      summary: Delete a scenario that you own
      parameters:
        - $ref: '#/parameters/PathScenarioId'
        - $ref: '#/parameters/MetaFormats'
      tags:
        - Scenarios
      responses:
        200:
          description: An OK message that the scenario was deleted
  /sdm/typecodes/{format}:
    get:
      summary: Get a list of type codes that match the specified criteria
      parameters:
        - $ref: '#/parameters/MetaFormats'
        - $ref: '#/parameters/AfterTime'
        - $ref: '#/parameters/BeforeTime'
        - $ref: '#/parameters/FullObjects'
        - $ref: '#/parameters/Page'
        - $ref: '#/parameters/PerPage'
        - $ref: '#/parameters/Public'
      tags:
        - Type Codes
      responses:
        200:
          description: A list of type codes matching your criteria
          schema:
            $ref: '#/definitions/AtomList'
    post:
      summary: Post a new type code
      parameters:
        - $ref: '#/parameters/MetaFormats'
        - name: code
          in: query
          description: The code for the new type code
          required: true
          type: string
        - name: description
          in: query
          description: A description of the new type code
          required: false
          type: string
        - name: title
          in: query
          description: A title for this type code
          required: false
          type: string
        - name: keyword
          in: query
          description: A keyword to associate with this type code
          required: false
          type: string
      tags:
        - Type Codes
      responses:
        201:
          description: A new type code in the specified format
          schema:
            $ref: '#/definitions/TypeCode'
  /sdm/typecodes/{typeCodeId}/{format}:
    get:
      summary: Get a type code
      parameters:
        - $ref: '#/parameters/PathTypeCodeId'
        - $ref: '#/parameters/MetaFormats'
      tags:
        - Type Codes
      responses:
        200:
          description: The type code
          schema:
            $ref: '#/definitions/TypeCode'
    delete:
      summary: Delete a type code that you own
      parameters:
        - $ref: '#/parameters/PathTypeCodeId'
        - $ref: '#/parameters/MetaFormats'
      tags:
        - Type Codes
      responses:
        200:
          description: An OK message that the type code was deleted
definitions:
  Algorithm:
    #TODO Fill in description
    type: object
  AtomList:
    type: object
    properties:
      title:
        type: string
        description: The title of the returned list
      items:
        type: array
        description: Array of returned items
        items:
           $ref: '#/definitions/AtomObject'
      itemCount:
        type: integer
        description: The total number of items that match these criteria
      userId:
        type: string
        description: The name of the user that these items belong to
      queryParameters:
        type: object
        description: The query parameters available for this service
        #properties:
  AtomObject:
    type: object
    properties:
      id:
        type: integer
        description: The id of the object
      modTime:
        type: string
        description: The date / time this object was last modified
      title:
        type: string
        description: The title of the object
      url:
        type: string
        description: A URL for more information about this object
  Experiment:
    type: object
    properties:
      algorithm:
        $ref: '#/definitions/Algorithm'
      bbox:
        type: string
      createTime:
        type: string
      epsgcode:
        type: integer
      id:
        type: integer
      metadataUrl:
        type: string
      modTime:
        type: string
      model:
        type: object
        properties:
          algorithmCode:
            type: string
          bbox:
            type: string
          createTime:
            type: string
          epsgcode:
            type: integer
          id:
            type: integer
          layers:
            type: object
            properties:
              layer:
                $ref: '#/definitions/Layer'
          makeflowFilename:
            type: string
          mapFilename:
            type: string
          mapName:
            type: string
          metadataUrl:
            type: string
          modTime:
            type: string
          moduleType:
            type: string
          name:
            type: string
          occurrenceSet:
            $ref: '#/definitions/OccurrenceSet'
          pointsName:
            type: string
          priority:
            type: integer
          qualityControl:
            type: object
          ruleset:
            type: string
          scenarioCode:
            type: string
          serviceType:
            type: string
          status:
            type: integer
          statusModTime:
            type: string
          user:
            type: string
      moduleType:
        type: string
      projections:
        type: object
        properties:
          projection:
            type: array
            items:
              $ref: '#/definitions/Projection'
      serviceType:
        type: string
      statusModTime:
        type: string
      user:
        type: string
  Layer:
    type: object
    properties:
      SRS:
        type: string
      bbox:
        type: string
      dataForamt:
        type: string
      description:
        type: string
      endDate:
        type: string
      espgcode:
        type: integer
      gdalType:
        type: integer
      geoTransform:
        type: array
        items:
          type: string
      id:
        type: integer
      isCategorical:
        type: boolean
      keywords:
        type: array
        items:
          type: string
      mapLayername:
        type: string
      mapPrefix:
        type: string
      mapUnits:
        type: string
      maxVal:
        type: number
      maxX:
        type: number
      maxY:
        type: number
      metadataUrl:
        type: string
      minVal:
        type: number
      minX:
        type: number
      minY:
        type: number
      modTime:
        type: string
      moduleType:
        type: string
      name:
        type: string
      nodataVal:
        type: number
      parametersModTime:
        type: string
      resolution:
        type: number
      serviceType:
        type: string
      size:
        type: array
        items:
          type: integer
      srs:
        type: string
      startDate:
        type: string
      title:
        type: string
      typeCode:
        type: string
      typeDescription:
        type: string
      typeKeywords:
        type: array
        items:
          type: string
      typeTitle:
        type: string
      user:
        type: string
      valUnits:
        type: string
      verify:
        type: string
  OccurrenceSet:
    type: object
    properties:
      SRS:
        type: string
      bbox:
        type: string
      count:
        type: integer
      dataFormat:
        type: string
      displayName:
        type: string
      epsgcode:
        type: string
      featureCount:
        type: integer
      feature:
        type: array
        items:
          type: object
          properties:
            datasetkey:
              type: string
            catnum:
              type: string
            basisofrec:
              type: string
            inst_code:
              type: string
            month:
              type: string
            year:
              type: string
            coll_code:
              type: string
            geomwkt:
              type: string
            specieskey:
              type: string
            day:
              type: string
            genuskey:
              type: string
            sciname:
              type: string
            dec_long:
              type: number
              format: float
            phylumkey:
              type: string
            gbifurl:
              type: string
            occurid:
              type: string
            classkey:
              type: string
            gbifid:
              type: string
            familykey:
              type: string
            dec_lat:
              type: number
              format: float
            taxonkey:
              type: string
            localid:
              type: string
            rec_by:
              type: string
            kingdomkey:
              type: string
            orderkey:
              type: string
            puborgkey:
              type: string
      fromGbif:
        type: string
      id:
        type: integer
      isCategorical:
        type: boolean
      keywords:
        type: array
        items:
          type: string
      layerName:
        type: string
      makeflowFilename:
        type: string
      mapFilename:
        type: string
      mapLayername:
        type: string
      mapName:
        type: string
      mapPrefix:
        type: string
      mapUnits:
        type: string
      maxX:
        type: number
      maxY:
        type: number
      metadataUrl:
        type: string
      minX:
        type: number
      minY:
        type: number
      modTime:
        type: string
      moduleType:
        type: string
      name:
        type: string
      objId:
        type: integer
      ogrType:
        type: integer
      parametersModTime:
        type: string
      primaryEnv:
        type: string
      queryCount:
        type: integer
      serviceType:
        type: string
      status:
        type: integer
      statusModTime:
        type: string
      title:
        type: string
      user:
        type: string
      verify:
        type: string
  Projection:
    type: object
    properties:
      title:
        type: string
      SRS:
        type: string
      algorithmCode:
        type: string
      bbox:
        type: string
      createTime:
        type: string
      dataFormat:
        type: string
      description:
        type: string
      epsgcode:
        type: string
      gdalType:
        type: string
      geoTransform:
        type: array
        items:
          type: string
      id:
        type: integer
      isCatagorical:
        type: boolean
      keywords:
        type: array
        items:
          type: string
      layers:
        type: object
        properties:
          layers:
            type: array
            items:
              $ref: '#/definitions/Layer'
      makeflowFilename:
        type: string
      mapFilename:
        type: string
      mapLayername:
        type: string
      mapName:
        type: string
      mapPrefix:
        type: string
      mapUnits:
        type: string
      maxVal:
        type: number
      maxX:
        type: number
      maxY:
        type: number
      metadataUrl:
        type: string
      minVal:
        type: number
      minX:
        type: number
      minY:
        type: number
      modTime:
        type: string
      moduleType:
        type: string
      name:
        type: string
      nodataVal:
        type: string
      objId:
        type: string
      parametersModTime:
        type: string
      priority:
        type: integer
      resolution:
        type: number
      scenarioCode:
        type: string
      serviceType:
        type: string
      size:
        type: array
        items:
          type: integer
      speciesName:
        type: string
      srs:
        type: string
      status:
        type: string
      statusModTime:
        type: string
      user:
        type: string
      verify:
        type: string
  Scenario:
    type: object
    properties:
      title:
        type: string
        description: The title of the scenario
      SRS:
        type: string
        description: The spatial reference string for the scenario
      author:
        type: string
        description: The author of the scenario
      bbox:
        type: string
        description: The bounding box for the scenario extent
      code:
        type: string
        description: The scenario code
      count:
        type: integer
        description: The number of layers in the scenario
      description:
        type: string
        description: A description of the scenario
      endDate:
        type: string
        description: The end date for the scenario
      epsgcode:
        type: integer
        description: The EPSG code for the scenario
      id:
        type: integer
        description: The ID of the scenario
      intersecBounds:
        type: array
        items:
          type: string
      intersectKeywords:
        type: array
        items:
          type: string
      keywords:
        type: array
        items:
          type: string
      layers:
        type: object
        properties:
          layers:
            type: array
            items:
              $ref: '#/definitions/Layer'
      mapFilename:
        type: string
      mapName:
        type: string
      mapPrefix:
        type: string
      maxX:
        type: string
      maxY:
        type: string
      metadataUrl:
        type: string
      minX:
        type: string
      minY:
        type: string
      modTime:
        type: string
      moduleType:
        type: string
      name:
        type: string
      resolution:
        type: string
      serviceType:
        type: string
      startDate:
        type: string
      unionBounds:
        type: array
        items:
          type: string
      unionKeywords:
        type: array
        items:
          type: string
      units:
        type: string
        description: The units of the cell size of each of the layers in the scenario
      user:
        type: string
  TypeCode:
    type: object
    properties:
      createTime:
        type: string
        description: When the type code was created
      id:
        type: integer
        description: ID for the type code
      metadataUrl:
        type: string
        description: URL for metadata about type code
      modTime:
        type: string
        description: When the type code was last modified
      moduleType:
        type: string
      parametersModTime:
        type: string
      serviceType:
        type: string
      typeCode:
        type: string
        description: The type code of the type code
      typeDescription:
        type: string
        description: A description of the type code
      typeKeywords:
        type: array
        items:
          type: string
      typeTitle:
        type: string
        description: The title of the type code
      user:
        type: string
        description: The user that owns this type code
parameters:
  # Path Parameters
  ExperimentFormats:
    name: format
    in: path
    description: Format to return experiment
    required: true
    type: string
    enum: [atom, eml, html, json, kml, model, package, prov, status, xml]
  MetaFormats:
    name: format
    in: path
    description: Meta format for the response
    required: true
    type: string
    enum: [atom, html, json, xml]
  LayerFormats:
    name: format
    in: path
    description: Format to return the layer
    required: true
    type: string
    enum: [atom, eml, html, json, kml, xml]
  OccurrenceSetFormats:
    name: format
    in: path
    description: Format to return the occurrence set
    required: true
    type: string
    enum: [atom, eml, html, json, kml, prov, status, xml]
  PathExperimentId:
    name: experimentId
    in: path
    description: The id of the experiment to use
    required: true
    type: integer
  PathLayerId:
    name: layerId
    in: path
    description: The id of the layer to use
    required: true
    type: integer
  PathOccurrenceSetId:
    name: occurrenceSetId
    in: path
    description: The id of the occurrence set to use
    required: true
    type: integer
  PathProjectionId:
    name: projectionId
    in: path
    description: The id of the projection
    required: true
    type: integer
  PathScenarioId:
    name: scenarioId
    in: path
    description: The id of the scenario
    required: true
    type: integer
  PathTypeCodeId:
    name: typeCodeId
    in: path
    description: The id of the type code
    required: true
    type: integer
  ProjectionFormats:
    name: format
    in: path
    description: Format to return the projection
    required: true
    type: string
    enum: [AAIGrid, atom, GTiff, html, json, xml]
  ScenarioFormats:
    name: format
    in: path
    description: Format to return the scenario
    required: true
    type: string
    enum: [atom, eml, html, json, xml]
  # Query Parameters
  AfterTime:
    name: afterTime
    in: query
    description: Return experiments modified after this time
    required: false
    type: string
  AlgorithmCode:
    name: algorithmCode
    in: query
    description: Return experiments that were built using this algorithm
    required: false
    type: string
  BeforeTime:
    name: beforeTime
    in: query
    description: Return experiments modified before this time
    required: false
    type: string
  DisplayName:
    name: displayName
    in: query
    description: Return experiments that have occurrence sets with a display name like this
    required: false
    type: string
  EPSG:
    name: epsgCode
    in: query
    description: Return experiments built using this EPSG code
    required: false
    type: integer
    format: integer
  ExperimentId:
    name: experimentId
    in: query
    description: Return objects related to this experiment
    required: false
    type: integer
    minimum: 0
  FullObjects:
    name: fullObjects
    in: query
    description: Return full experiment objects
    required: false
    type: integer
    format: int2
    enum: [0, 1]
    minimum: 0
    maximum: 1
  HasProjections:
    name: hasProjections
    in: query
    description: If 1, only return occurrence sets that have projections
    required: false
    type: integer
    format: 0 or 1
    enum: [0, 1]
    minimum: 0
    maximum: 1
  IsCategorical:
    name: isCategorical
    in: query
    description: If 1, only return categorical layers.  If 0, return layers that are not
    required: false
    type: integer
    format: int2
    enum: [0, 1]
    minimum: 0
    maximum: 1
  Keyword:
    name: keyword
    in: query
    description: Return items that have this keyword
    required: false
    type: string
  MatchingScenario:
    name: matchingScenario
    in: query
    description: Return scenarios that match the scenario specified by this id
    required: false
    type: string
  MinimumNumberOfPoints:
    name: minimumNumberOfPoints
    in: query
    description: Only return occurrence sets with at least this number of points
    required: false
    type: integer
    minimum: 0
  OccurrenceSetId:
    name: occurrenceSetId
    in: query
    description: Return experiments built using this occurrence set
    required: false
    type: integer
    format: integer
  Page:
    name: page
    in: query
    description: A page number of results, used with perPage
    required: false
    type: integer
    format: integer
    minimum: 0
  PerPage:
    name: perPage
    in: query
    description: The number of results to return per page
    required: false
    type: integer
    format: integer
    minimum: 1
    maximum: 1000
  Public:
    name: public
    in: query
    description: If this is 1, return public objects, else return only private content if this is 0
    required: false
    type: integer
    format: int2
    minimum: 0
    maximum: 1
    enum: [0, 1]
  ScenarioId:
    name: scenarioId
    in: query
    description: Return objects thatare in or used this scenario
    required: false
    type: integer
    minimum: 0
  Status:
    name: status
    in: query
    description: Return experiments that have this status for the model
    required: false
    type: integer
    format: integer
  TypeCode:
    name: typeCode
    in: query
    description: Return objects that use this type code
    required: false
    type: string

